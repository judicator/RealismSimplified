// ============================================================================
// Add Part Upgrade for upgradeable slots
// ============================================================================

PARTUPGRADE:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]
{
	name = Upgrade-Slots
	partIcon = kerbalism-chemicalplant
	techRequired = spaceExploration
	entryCost = 20000
	title = #KERBALISM_Upgrade_Slots_title // Life support and Chemical plant slot upgrade
	manufacturer = Lambda Aerospace
	description = #KERBALISM_Upgrade_Slots_desc // Adds an additional configurable slot to Manned pods, ECLSS module and Chemical plants.
}


// ============================================================================
// Add configurable Life Support System to all manned parts
// ============================================================================

@PART[*]:HAS[#CrewCapacity[>0],!MODULE[KerbalSeat]]:NEEDS[ProfileRSDefault]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = #SRF_KERBALISM_Scrubber_title
		capacity = #$/CrewCapacity$
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _KO2Scrubber
		title = #SRF_KERBALISM_KO2Scrubber_title
		capacity = #$/CrewCapacity$
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _LiOHScrubber
		title = #SRF_KERBALISM_LiOHScrubber_title
		capacity = #$/CrewCapacity$
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _LiOHNonRegenScrubber
		title = #SRF_KERBALISM_LiOHNonRegenScrubber_title
		capacity = #$/CrewCapacity$
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = #KERBALISM_WaterRecycler_title // Water recycler
		capacity = #$/CrewCapacity$
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = #KERBALISM_WasteProcessor_title // Waste processor
		capacity = #$/CrewCapacity$
		running = true
	}
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
		capacity = #$/CrewCapacity$
		@capacity /= 2
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Pod
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = spaceExploration
				slots = 0
			}
		}

		SETUP
		{
			name = Regen. CO2 Removal System
			desc = #KERBALISM_Scrubber_desc
			tech = spaceExploration
			mass = 0.09
			cost = 300
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Potassium Scrubber
			desc = #SRF_KERBALISM_KO2Scrubber_desc
			tech = spaceExploration
			mass = 0.02
			cost = 150
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _KO2Scrubber
			}

			RESOURCE
			{
				name = PotassiumSuperoxide
				amount = 11.075508864
				@amount *= #$/CrewCapacity$
				maxAmount = 11.075508864    // maximum for 2 weeks
				@maxAmount *= #$/CrewCapacity$
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 17.279607744
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = LiOH Scrubber
			desc = #SRF_KERBALISM_LiOHScrubber_desc
			tech = spaceExploration
			mass = 0.02
			cost = 120
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LiOHScrubber
			}
			RESOURCE
			{
				name = LithiumHydroxide
				amount = 7.191072
				@amount *= #$/CrewCapacity$
				maxAmount = 7.191072        // maximum for 2 weeks
				@maxAmount *= #$/CrewCapacity$
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 17.279607744
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = Non-Regen LiOH Scrubber
			desc = #SRF_KERBALISM_Process_LiOHNonRegenScrubber
			mass = 0.01
			cost = 50
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LiOHNonRegenScrubber
			}
			RESOURCE
			{
				name = LithiumHydroxide
				amount = 7.191072           // maximum for 2 weeks
				@amount *= #$/CrewCapacity$
				maxAmount = 7.191072        // maximum for 2 weeks
				@maxAmount *= #$/CrewCapacity$
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 17.279607744
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = #KERBALISM_WaterRecycler_desc // Filter impurities out of <b>WasteWater</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 3.743712
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = #KERBALISM_WasteProcessor_desc // Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 250
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 2.753352
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = largeElectrics
			mass = 0.1
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 110078						// for 6 hours
				@amount *= #$/CrewCapacity$
				maxAmount = 110078
				@maxAmount *= #$/CrewCapacity$
			}
			RESOURCE
			{
				name = Oxygen
				amount = 55039						// for 6 hours
				@amount *= #$/CrewCapacity$
				maxAmount = 55039
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc // Empty slot for mass and cost savings.
		}
	}
}

@PART[*]:HAS[#CrewCapacity[>0],!MODULE[KerbalSeat]]:NEEDS[ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = #KERBALISM_WaterRecycler_title // Water recycler
		capacity = #$/CrewCapacity$
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = #KERBALISM_WasteProcessor_title // Waste processor
		capacity = #$/CrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
		capacity = #$/CrewCapacity$
		@capacity /= 2
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Pod
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = spaceExploration
				slots = 0
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = #KERBALISM_WaterRecycler_desc // Filter impurities out of <b>WasteWater</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 3.743712
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = #KERBALISM_WasteProcessor_desc // Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 250
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 2.753352
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = largeElectrics
			mass = 0.1
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 110078						// for 6 hours
				@amount *= #$/CrewCapacity$
				maxAmount = 110078
				@maxAmount *= #$/CrewCapacity$
			}
			RESOURCE
			{
				name = Oxygen
				amount = 55039						// for 6 hours
				@amount *= #$/CrewCapacity$
				maxAmount = 55039
				@maxAmount *= #$/CrewCapacity$
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc // Empty slot for mass and cost savings.
		}
	}
}


// ============================================================================
// Add configurable Life Support System to Life Support Unit part
// ============================================================================

@PART[kerbalism-lifesupportmodule]:NEEDS[ProfileRSDefault]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = #SRF_KERBALISM_Scrubber_title
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _KO2Scrubber
		title = #SRF_KERBALISM_KO2Scrubber_title
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _LiOHScrubber
		title = #SRF_KERBALISM_LiOHScrubber_title
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _LiOHNonRegenScrubber
		title = #SRF_KERBALISM_LiOHNonRegenScrubber_title
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = #KERBALISM_WaterRecycler_title // Water recycler
		capacity = 3
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = #KERBALISM_WasteProcessor_title // Waste processor
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = #KERBALISM_AirPump_title // Air Pump
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
		capacity = 3
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Life Support
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = spaceExploration
				slots = 0
			}
		}

		SETUP
		{
			name = Regen. CO2 Removal System
			desc = #KERBALISM_Scrubber_desc
			tech = SRF_LongTermLifeSupport
			mass = 0.09
			cost = 300
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Potassium Scrubber
			desc = #SRF_KERBALISM_KO2Scrubber_desc
			tech = SRF_AdvLifeSupport
			mass = 0.02
			cost = 150
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _KO2Scrubber
			}
			RESOURCE
			{
				name = PotassiumSuperoxide
				amount = 33.226526592
				maxAmount = 33.226526592
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 51.838823232
			}
		}

		SETUP
		{
			name = LiOH Scrubber
			desc = #SRF_KERBALISM_LiOHScrubber_desc
			mass = 0.02
			cost = 120
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LiOHScrubber
			}
			RESOURCE
			{
				name = LithiumHydroxide
				amount = 21.573216
				maxAmount = 21.573216
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 51.838823232
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = #KERBALISM_WaterRecycler_desc // Filter impurities out of <b>WasteWater</b>.
			tech = SRF_LongTermLifeSupport
			mass = 0.05
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 11.231136
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = #KERBALISM_WasteProcessor_desc // Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = SRF_AdvLifeSupport
			mass = 0.05
			cost = 250
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 8.260056
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = largeElectrics
			mass = 0.15
			cost = 750
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 330234
				maxAmount = 330234
			}
			RESOURCE
			{
				name = Oxygen
				amount = 165117
				maxAmount = 165117
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc // Empty slot for mass and cost savings.
		}
	}
}

@PART[kerbalism-lifesupportmodule]:NEEDS[ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = #KERBALISM_WaterRecycler_title // Water recycler
		capacity = 3
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = #KERBALISM_WasteProcessor_title // Waste processor
		capacity = 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
		capacity = 3
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Life Support
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = spaceExploration
				slots = 0
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = #KERBALISM_WaterRecycler_desc // Filter impurities out of <b>WasteWater</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 11.231136
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = #KERBALISM_WasteProcessor_desc // Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 250
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 8.260056
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = largeElectrics
			mass = 0.15
			cost = 750
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 330234
				maxAmount = 330234
			}
			RESOURCE
			{
				name = Oxygen
				amount = 165117
				maxAmount = 165117
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc // Empty slot for mass and cost savings.
		}
	}
}


// ============================================================================
// Add scrubber process to EVA kerbals
// ============================================================================

@PART[kerbalEVA*]:HAS[@MODULE[ModuleTripLogger]]:NEEDS[ProfileRSDefault]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _NonRegenScrubber
		title = #KERBALISM_NonRegenScrubber_title // Non-Regen Scrubber
		capacity = 1.0
		toggle = true
		running = true
	}
}


// ============================================================================
// Setup greenhouse
// ============================================================================

@PART[kerbalism-greenhouse]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = ProcessController
		resource = _Greenhouse
		title = #SRF_KERBALISM_Greenhouse_title
		capacity = 2.0
		toggle = true
		running = false
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 39030       // enough for 365 days, assuming CO2 output from regen. scrubber for two kerbals
		maxAmount = 39030
	}

	RESOURCE
	{
		name = Ammonia
		amount = 9117        // enough for 365 days, assuming ammonia output from water recycler and waste procesor for two kerbals
		maxAmount = 9117
	}

	RESOURCE
	{
		name = Water
		amount = 533.8       // enough for 365 days
		maxAmount = 533.8
	}

	RESOURCE
	{
		name = Fertilizer
		amount = 42.7        // enough for 365 days
		maxAmount = 42.7
	}

	RESOURCE
	{
		name = Food
		amount = 0
		maxAmount = 20.48    // stored supply for 7 days
	}

	RESOURCE
	{
		name = Waste
		amount = 0
		maxAmount = 9.21
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #SRF_KERBALISM_Greenhouse_title
		redundancy = Greenhouse
		repair = Scientist@3
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.25
	}
}


// ============================================================================
// Launch clamps
// ============================================================================

@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreElectrical[],@MODULE[LaunchClamp],@MODULE[ModuleGenerator]:HAS[@OUTPUT_RESOURCE[ElectricCharge]]]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleGenerator]:HAS[@OUTPUT_RESOURCE[ElectricCharge]] {}

	MODULE
	{
		name = ProcessController
		resource = _ECGen
		title = #KERBALISM_PowerSupply_title // Power supply
		capacity = 1.0
		running = true
		toggle = false
	}
}
@PART[*]:HAS[~RS_IgnorePart[],#RS_GeneratePropellants[*rue],@MODULE[*LaunchClamp]]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport,CryoTanks]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleGenerator]:HAS[@OUTPUT_RESOURCE[LqdOxygen]] {}
	!MODULE[ModuleGenerator]:HAS[@OUTPUT_RESOURCE[LqdHydrogen]] {}
	!MODULE[ModuleGenerator]:HAS[@OUTPUT_RESOURCE[LqdMethane]] {}

	MODULE
	{
		name = ProcessController
		resource = _LOXGen
		title = #LOC_RS_Kerbalism_LOX_Generator_title
		capacity = #$@REALISM_SIMPLIFIED/launchClamps_LOX_GenerationRate$
		running = false
		toggle = true
	}
	MODULE
	{
		name = ProcessController
		resource = _LH2Gen
		title = #LOC_RS_Kerbalism_LH2_Generator_title
		capacity = #$@REALISM_SIMPLIFIED/launchClamps_LH2_GenerationRate$
		running = false
		toggle = true
	}
	MODULE
	{
		name = ProcessController
		resource = _LqdMethaneGen
		title = #LOC_RS_Kerbalism_LqdMethane_Generator_title
		capacity = 1.0
		running = false
		toggle = true
	}
}


// ============================================================================
// RTG
// ============================================================================

@PART[rtg]:HAS[~RS_IgnorePart[],~RS_IgnoreElectrical[],#RS_SimpleRTGs[*rue]]:NEEDS[ProfileSRFDefault|ProfileSRFSimpleLifeSupport|ProfileSRFNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@cost = 23300
	@cost *= #$@REALISM_SIMPLIFIED/RTG_costCoeff$

	!MODULE[ModuleGenerator] {}
	!MODULE[ModuleRadioisotopeGenerator] {}
	!MODULE[ModuleB9PartSwitch],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _RTG
		title = #LOC_RS_KERBALISM_Pu238RTG_title
		capacity = 0.75
		running = true
		toggle = false
	}
}
@PART[rtg]:HAS[~RS_IgnorePart[],~RS_IgnoreElectrical[],~RS_SimpleRTGs[*rue]]:NEEDS[ProfileSRFDefault|ProfileSRFSimpleLifeSupport|ProfileSRFNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@cost = 23300
	@cost *= #$@REALISM_SIMPLIFIED/RTG_costCoeff$
	@TechRequired = advElectrics

	!MODULE[ModuleGenerator] {}
	!MODULE[ModuleRadioisotopeGenerator] {}
	!MODULE[ModuleB9PartSwitch],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _RTG
		title = #LOC_RS_KERBALISM_Pu238RTG_title
		capacity = 0.75
		running = true
		toggle = false
	}
	MODULE
	{
		name = ProcessController
		resource = _RTGPo210
		title = #LOC_RS_KERBALISM_Po210RTG_title
		capacity = 0.75
		running = true
		toggle = false
	}
	MODULE
	{
		name = ProcessController
		resource = _RTGSr90
		title = #LOC_RS_KERBALISM_Sr90RTG_title
		capacity = 0.75
		running = true
		toggle = false
	}
	MODULE
	{
		name = ProcessController
		resource = _RTGAm241
		title = #LOC_RS_KERBALISM_Am241RTG_title
		capacity = 0.75
		running = true
		toggle = false
	}
	MODULE
	{
		name = Configure
		title = RTG
		slots = 1

		SETUP
		{
			name = Pu-238 RTG
			desc = #LOC_RS_KERBALISM_Pu238RTG_desc
			tech = specializedElectrics
			cost = #$/cost$
			@cost *= #$@REALISM_SIMPLIFIED/RTG_Pu238_costCoeff$
			@cost -= #$/cost$
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTG
			}
		}
		SETUP
		{
			name = Am-241 RTG
			desc = #LOC_RS_KERBALISM_Am241RTG_desc
			tech = experimentalElectrics
			cost = #$/cost$
			@cost *= #$@REALISM_SIMPLIFIED/RTG_Am241_costCoeff$
			@cost -= #$/cost$
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTGAm241
			}
		}
		SETUP
		{
			name = Sr-90 RTG
			desc = #LOC_RS_KERBALISM_Sr90RTG_desc
			tech = largeElectrics
			cost = #$/cost$
			@cost *= #$@REALISM_SIMPLIFIED/RTG_Sr90_costCoeff$
			@cost -= #$/cost$
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTGSr90
			}
			MODULE:NEEDS[FeatureRadiation]
			{
				type = Emitter
				id_index = 0
			}
		}
		SETUP
		{
			name = Po-210 RTG
			desc = #LOC_RS_KERBALISM_Po210RTG_desc
			cost = #$/cost$
			@cost *= #$@REALISM_SIMPLIFIED/RTG_Po210_costCoeff$
			@cost -= #$/cost$
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTGPo210
			}
		}
	}
}


// ============================================================================
// Fuel cells
// ============================================================================

@PART[FuelCell]:HAS[~RS_IgnorePart[],~RS_IgnoreElectrical[]]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleResourceConverter],* {}
	!RESOURCE[ElectricCharge] {}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
		capacity = 2
		valve_i = 1 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _LH2FuelCell
		title = #SRF_KERBALISM_LH2LOXFuelCell_title
		capacity = 2
	}

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = #SRF_KERBALISM_MonopropO2FuelCell_title // Monoprop+O2 fuel cell
		capacity = 2
	}

	MODULE
	{
		name = ProcessController
		resource = _MethanolFuelCell
		title = #SRF_KERBALISM_MethanolO2FuelCell_title
		capacity = 2
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}

		SETUP
		{
			name = LH2+LOX Fuel Cell
			desc = #SRF_KERBALISM_LH2LOXFuelCell_desc // Burns <b>Lqd.Hydrogen</b> and <b>Lqd.Oxygen</b>, producing <b>Water</b> as a by-product.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LH2FuelCell
			}
		}

		SETUP
		{
			name = Hydrazine Oxygen Fuel Cell
			desc = #SRF_KERBALISM_MonopropO2FuelCell_desc
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}

		SETUP
		{
			name = Methanol Oxygen Fuel Cell
			desc = #SRF_KERBALISM_MethanolO2FuelCell_desc
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MethanolFuelCell
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title // Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

@PART[FuelCellArray]:HAS[~RS_IgnorePart[],~RS_IgnoreElectrical[]]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleResourceConverter],* {}
	!RESOURCE[ElectricCharge] {}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
		capacity = 10
	}

	MODULE
	{
		name = ProcessController
		resource = _LH2FuelCell
		title = #SRF_KERBALISM_LH2LOXFuelCell_title
		capacity = 10
	}

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = #SRF_KERBALISM_MonopropO2FuelCell_title
		capacity = 10
	}

	MODULE
	{
		name = ProcessController
		resource = _MethanolFuelCell
		title = #SRF_KERBALISM_MethanolO2FuelCell_title
		capacity = 10
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}

		SETUP
		{
			name = LH2+LOX Fuel Cell
			desc = #SRF_KERBALISM_LH2LOXFuelCell_desc // Burns <b>Lqd.Hydrogen</b> and <b>Lqd.Oxygen</b>, producing <b>Water</b> as a by-product.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LH2FuelCell
			}
		}

		SETUP
		{
			name = Hydrazine Oxygen Fuel Cell
			desc = #SRF_KERBALISM_MonopropO2FuelCell_desc
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}

		SETUP
		{
			name = Methanol Oxygen Fuel Cell
			desc = #SRF_KERBALISM_MethanolO2FuelCell_desc
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MethanolFuelCell
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title // Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}


// ============================================================================
// ISRU chemical plants
// ============================================================================

@PART[kerbalism-chemicalplant,MiniISRU,ISRU]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Monoprop]] {}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[MonoPropellant]] {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = #KERBALISM_WaterElectrolysis_title // Water electrolysis
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = #KERBALISM_SabatierProcess_title // Sabatier process
		capacity = 1
		valve_i = 2 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = #KERBALISM_HaberProcess_title // Haber process
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteIncinerator
		title = Waste incinerator
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _Anthraquinone
		title = #KERBALISM_AnthraquinoneProcess_title // Anthraquinone process
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _HydrazineProduction
		title = #KERBALISM_HydrazineProduction_title // Hydrazine production
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _NitroHydrazine
		title = #KERBALISM_HydrazineProductionN2_title // Hydrazine production N2
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _MRE
		title = #KERBALISM_MoltenRegolithElectrolysis_title // MRE
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = #KERBALISM_SolidOxideElectrolysis_title // SOE
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _SCO
		title = #KERBALISM_SelectiveCatalyticOxidation_title // SCO
		capacity = 1
	}

	MODULE
	{
		name = Configure
		title = Chemical Plant
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = SRF_AdvISRU
				slots = 0
			}
		}

		SETUP
		{
			name = Water Electrolysis
			desc = #KERBALISM_WaterElectrolysis_desc // Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
			}
		}

		SETUP
		{
			name = Sabatier Process
			desc = #SRF_KERBALISM_SabatierProcess_desc // <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
			}
		}

		SETUP
		{
			name = Haber Process
			desc = #KERBALISM_HaberProcess_desc // Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Haber
			}
		}

		SETUP
		{
			name = Waste Incinerator
			desc = #KERBALISM_WasteIncinerator_desc // Produce <b>CarbonDioxide</b> and <b>Water</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator. If needed <b>Water</b> will be vented to continue <b>CarbonDioxide</b> extraction.
			tech = SRF_AdvLifeSupport
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteIncinerator
			}
		}

		SETUP
		{
			name = Anthraquinone Process
			desc = #SRF_KERBALISM_AnthraquinoneProcess_desc
			tech = SRF_AdvISRU
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Anthraquinone
			}
		}

		SETUP
		{
			name = Hydrazine Production
			desc = #SRF_KERBALISM_HydrazineProduction_desc
			tech = SRF_AdvISRU
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _HydrazineProduction
			}
		}

		SETUP
		{
			name = Hydrazine Production (N2 Injection)
			desc = #SRF_KERBALISM_HydrazineProductionN2_desc
			tech = SRF_AdvISRU
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _NitroHydrazine
			}
		}

		SETUP
		{
			name = Solid Oxide Electrolysis
			desc = #KERBALISM_SolidOxideElectrolysis_desc//Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
			tech = SRF_AdvISRU
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SOE
			}
		}

		SETUP
		{
			name = Molten Regolith Electrolysis
			desc = #SRF_KERBALISM_MoltenRegolithElectrolysis_desc
			tech = SRF_AdvISRU
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MRE
			}
		}

		SETUP
		{
			name = Selective Catalytic Oxidation
			desc = #KERBALISM_SelectiveCatalyticOxidation_desc//<b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
			tech = SRF_AdvISRU
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SCO
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_ChemicalPlant_title//Chemical Plant
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

@PART[MiniISRU]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 36.0      //  2.0 * 18  (MiniISRU is 18 times bigger than the kerbalism-chemicalplant)
	}
}

@PART[ISRU]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 90.0     //  36.0 * 5 / 2  (ISRU is 5 times bigger than the MiniISRU but has double the slots)
	}

	@MODULE[Configure]:HAS[#title[Chemical?Plant]]
	{
		%slots = 2
	}
}

@PART[kerbalism-chemicalplant]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 2.0
	}
}

// You get a slot upgrade, and you get a slot upgrade, EVERYONE gets a slot upgrade!
// Had to fix unintended shenenigans, assuming whoever patched this initially never expected multiple configures on the same part.
@PART[*]:HAS[@MODULE[Configure]]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[Configure]:HAS[#title[Chemical?Plant]]
	{
		@UPGRADES
		{
			@UPGRADE:HAS[#name__[Upgrade?Slots]]
			{
				@slots = #$../../slots$
				@slots += 1
			}
		}
	}
}
@PART[*]:HAS[@MODULE[Configure]]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		@UPGRADES
		{
			@UPGRADE:HAS[#name__[Upgrade?Slots]]
			{
				@slots = #$../../slots$
				@slots += 1
			}
		}
	}
	@MODULE[Configure]:HAS[#title[Life?Support]]
	{
		@UPGRADES
		{
			@UPGRADE:HAS[#name__[Upgrade?Slots]]
			{
				@slots = #$../../slots$
				@slots += 1
			}
		}
	}
}
// tweak number of slots
@PART[mk3Cockpit_Shuttle]:NEEDS[ProfileRSDefault]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		@slots = 3
	}
}


// ============================================================================
// ISRU drills
// ============================================================================

@PART[MiniDrill,RadialDrill]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleResourceHarvester] {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}

	// Crustal - - -
	MODULE
	{
		name = Harvester
		title = #KERBALISM_WaterExcavation_title//Water Excavation
		type = 0
		resource = Water
		min_abundance = 0.01
		// https://www.nasa.gov/sites/default/files/atoms/files/mars_ice_drilling_assessment_v6_for_public_release.pdf shows
		// water harvesters from Ice at a rate of 50-400 L/day, as a middle ground we choose 65 L/day for the small harvester
		// which when scaled by factor 5 for the big harvester becomes 325 L/day.
		rate = 0.003 // 65 L/day / (6 hours/day * 3600 seconds/hour)
		// This is the maximum abundance on a random planet/moon
		// And the average on Duna poles, which are the only place where at the time writing higher than baseline water levels are modeled
		// And lower than what is found on Kerbin and Laythe
		abundance_rate = 0.1
		ec_rate = 1.0
	}

	MODULE
	{
		name = Harvester
		title = #SRF_KERBALISM_RegolithExcavation_title//Ore Excavation
		type = 0
		resource = Regolith
		min_abundance = 0.02
		rate = 0.0025
		ec_rate = 1.0
	}

	MODULE
	{
		name = Harvester
		title = #SRF_KERBALISM_MineralsExcavation_title//Ore Excavation
		type = 0
		resource = Minerals
		min_abundance = 0.02
		rate = 0.0025
		ec_rate = 1.0
	}

	MODULE
	{
		name = Harvester
		title = #SRF_KERBALISM_SpodumeneExcavation_title//Ore Excavation
		type = 0
		resource = Spodumene
		min_abundance = 0.02
		rate = 0.0025
		ec_rate = 1.0
	}

	MODULE
	{
		name = Harvester
		title = #KERBALISM_NitrogenExcavation_title//Nitrogen Excavation
		type = 0
		resource = Nitrogen
		min_abundance = 0.02
		rate = 0.0025
		ec_rate = 1.0
	}

	MODULE
	{
		name = Configure
		title = Drill
		slots = 1

		SETUP
		{
			name = Water Extraction
			desc = #KERBALISM_WaterExcavation_desc//Extract <b>Water</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
			RESOURCE
			{
				name = Water
				amount = 0
				maxAmount = 50
			}
		}

		SETUP
		{
			name = Regolith Excavation
			desc = #SRF_KERBALISM_RegolithExcavation_desc
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Regolith
			}
			RESOURCE
			{
				name = Regolith
				amount = 0
				maxAmount = 50
			}
		}

		SETUP
		{
			name = Minerals Excavation
			desc = #SRF_KERBALISM_MineralsExcavation_desc
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Minerals
			}
			RESOURCE
			{
				name = Minerals
				amount = 0
				maxAmount = 50
			}
		}

		SETUP
		{
			name = Spodumene Excavation
			desc = #SRF_KERBALISM_SpodumeneExcavation_desc
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Spodumene
			}
			RESOURCE
			{
				name = Spodumene
				amount = 0
				maxAmount = 50
			}
		}

		SETUP
		{
			name = Nitrogen Extraction
			desc = #KERBALISM_NitrogenExcavation_desc//Extract <b>Nitrogen</b> from the surface.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
			RESOURCE
			{
				name = Nitrogen
				amount = 0
				maxAmount = 1500
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = #KERBALISM_Harvester_title //Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

@PART[kerbalism-minipump,kerbalism-radialpump]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	!MODULE[ModuleResourceHarvester] {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleAsteroidDrill] {}

	// Oceanic - - -
	MODULE
	{
		name = Harvester
		title = #KERBALISM_WaterPump_title //Water Pump
		type = 1
		resource = Water
		min_abundance = 0.02
		rate = 0.003
		ec_rate = 1.0
	}

	MODULE
	{
		name = Harvester
		title = #KERBALISM_NitrogenPump_title //Nitrogen Pump
		type = 1
		resource = Nitrogen
		min_abundance = 0.02
		rate = 0.0025
		ec_rate = 1.0
	}

	MODULE
	{
		name = Harvester
		title = #KERBALISM_AmmoniaPump_title //Ammonia Pump
		type = 1
		resource = Ammonia
		min_abundance = 0.02
		rate = 0.0025
		ec_rate = 1.0
	}

	MODULE
	{
		name = Configure
		title = Pump
		slots = 1

		SETUP
		{
			name = Water Extraction
			desc = #KERBALISM_WaterExcavation_desc2 //Extract <b>Water</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
			RESOURCE
			{
				name = Water
				amount = 0
				maxAmount = 50
			}
		}

		SETUP
		{
			name = Nitrogen Extraction
			desc = #KERBALISM_NitrogenExcavation_desc2 //Extract <b>Nitrogen</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
			RESOURCE
			{
				name = Nitrogen
				amount = 0
				maxAmount = 1500
			}
		}

		SETUP
		{
			name = Ammonia Extraction
			desc = #KERBALISM_AmmoniaExtraction_desc //Extract <b>Ammonia</b> from the ocean.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ammonia
			}
			RESOURCE
			{
				name = Ammonia
				amount = 0
				maxAmount = 1500
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = #KERBALISM_Harvester_title //Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

@PART[MiniDrill,kerbalism-minipump]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[Harvester],*
	{
		drill = ImpactTransform
		length = 1.08
	}
}

@PART[RadialDrill,kerbalism-radialpump]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	@MODULE[Harvester],*
	{
		drill = ImpactTransform
		length = 5.42
		@rate *= 5
		@ec_rate *= 5
	}
}


// ============================================================================
// atmospheric harvester
// the atmospheric experiment part is used as an atmospheric harvester
// ============================================================================

@PART[sensorAtmosphere]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	MODULE
	{
		name = Harvester
		title = #KERBALISM_CO2Filter_title //CO2 Filter
		type = 2
		resource = CarbonDioxide
		min_abundance = 0.0025
		min_pressure = 4.0
		rate = 0.2
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = #KERBALISM_OxygenFilter_title //Oxygen Filter
		type = 2
		resource = Oxygen
		min_abundance = 0.02
		min_pressure = 5.0
		rate = 0.25
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = #KERBALISM_NitrogenFilter_title //Nitrogen Filter
		type = 2
		resource = Nitrogen
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 0.35
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = #KERBALISM_AmmoniaFilter_title //Ammonia Filter
		type = 2
		resource = Ammonia
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 0.35
		ec_rate = 0.5
	}

	MODULE
	{
		name = Configure
		title = Atmospheric Filter
		slots = 1

		SETUP
		{
			name = CO2 Filter
			desc = #KERBALISM_CO2Filter_desc //Extract <b>CO2</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonDioxide
			}
		}

		SETUP
		{
			name = Oxygen Filter
			desc = #KERBALISM_OxygenFilter_desc //Extract <b>Oxygen</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxygen
			}
		}

		SETUP
		{
			name = Nitrogen Filter
			desc = #KERBALISM_NitrogenFilter_desc //Extract <b>Nitrogen</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
		}

		SETUP
		{
			name = Ammonia Filter
			desc = #KERBALISM_AmmoniaFilter_desc //Extract <b>Ammonia</b> from the atmosphere.
			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ammonia
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = #KERBALISM_Harvester_title //Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}

	@mass = 0.2
}


// ============================================================================
// Habitats
// ============================================================================

@PART[kerbalism-gravityring]:NEEDS[ProfileRSDefault|ProfileRSSimpleLifeSupport|ProfileRSNoLifeSupport]:FOR[zzzzzzRealismSimplifiedKerbalism]
{
	%CrewCapacity = 6
}
