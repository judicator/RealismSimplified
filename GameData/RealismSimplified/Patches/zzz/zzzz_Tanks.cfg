// ===================================================================================================================
// FIXME
// ===================================================================================================================

//
// Settings
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TotalCap[>0],~RS_TankConfigured[],~RS_PropellantTanks_HPVariantsEnabled[]]:FOR[zzzzRealismSimplified]
{
	RS_PropellantTanks_HPVariantsEnabled = #$@REALISM_SIMPLIFIED/propellantTanks_HPVariantsEnabled$
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TotalCap[>0],~RS_AlcoLOX_Engines[]]:FOR[zzzzRealismSimplified]
{
	RS_AlcoLOX_Engines = #$@REALISM_SIMPLIFIED/AlcoLOX_Engines$
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TotalCap[>0],~RS_AvGas_Engines[]]:FOR[zzzzRealismSimplified]
{
	RS_AvGas_Engines = #$@REALISM_SIMPLIFIED/AvGas_Engines$
}

//
// Tank with built-in solid booster
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TotalCap[>0],@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],@RESOURCE[SolidFuel],#RS_TankType[*],#RS_MassOffset[*],~RS_RetroBoosterMass[],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@RESOURCE[SolidFuel]
	{
		@amount *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_SolidFuelAmountCoeff$
		@maxAmount *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_SolidFuelAmountCoeff$
	}
	@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],*
	{
		%RS_IgnoreEngine = true
		@minThrust *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_ThrustCoeff$
		@maxThrust *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_ThrustCoeff$
	}
	%RS_RetroBoosterMass = #$MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],0/maxThrust$
	@RS_RetroBoosterMass *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_ThrustCoeff$
	@RS_RetroBoosterMass *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_MassCoeff$
}
// Min booster mass is 1 kg
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TotalCap[>0],@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],@RESOURCE[SolidFuel],#RS_TankType[*],#RS_MassOffset[*],#RS_RetroBoosterMass[<0.001],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@RS_RetroBoosterMass = 0.001
}
// Max booster mass is 500 kg
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TotalCap[>0],@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],@RESOURCE[SolidFuel],#RS_TankType[*],#RS_MassOffset[*],#RS_RetroBoosterMass[>0.5],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@RS_RetroBoosterMass = 0.5
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TotalCap[>0],@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],@RESOURCE[SolidFuel],#RS_TankType[*],#RS_MassOffset[*],#RS_RetroBoosterMass[*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@RS_MassOffset += #$RS_RetroBoosterMass$
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TotalCap[>0],@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],@RESOURCE[SolidFuel],#RS_TankType[*],#RS_CostOffset[*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	%RS_RetroBoosterCost = #$MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],0/maxThrust$
	@RS_RetroBoosterCost *= #$@REALISM_SIMPLIFIED/propellantTanks_RetroBooster_CostCoeff$
	@RS_CostOffset += #$RS_RetroBoosterCost$
}

//
// Tank with built-in engine (but not SRB)
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TotalCap[>0],@MODULE[ModuleEngines*]:HAS[!PROPELLANT[SolidFuel]],#RS_TankType[*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	%RS_Tank_AddContentsSwitch = false
	%RS_Tank_AddPressurizationSwitch = false
//	%RS_Tank_AddTechLevelSwitch = false
//	%RS_Tank_AddInsulationSwitch = false
	%RS_IgnoreForReentryProtection = true
}

// Tank with ModuleRCS
// If tank volume is less than fuelTank_RCS_Propellants_Volume_Threshold setting, all tank volume is dedicated to RCS propellants,
// and propellants switch should be handled by RCS type switch. This patch will ignore such tank
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleRCS*],#RS_TotalCap[>0]]:FOR[zzzzRealismSimplified]
{
	%RS_MainTankVolume = #$RS_TotalCap$
	@RS_MainTankVolume -= #$@REALISM_SIMPLIFIED/RCS_CombinedWithFuelTank_Volume_Threshold$
}
// Ignore this fuel tank for this patch
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleRCS*],#RS_TotalCap[>0],#RS_MainTankVolume[<0]]:FOR[zzzzRealismSimplified]
{
	RS_IgnoreTank = true
}

// Propellant tank without tech level - set default (5)
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],~RS_PartTechLevel[]]:FOR[zzzzRealismSimplified]
{
	RS_PartTechLevel = 5
}

// ===================================================================================================================
// Calculate added masses and costs
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TotalCap[>0],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	%RS_TankDryMass = #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
	@RS_TankDryMass *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
	@RS_TankDryMass *= #$RS_TotalCap$

	%RS_TankDryCost = #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
	@RS_TankDryCost *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
	@RS_TankDryCost *= #$RS_TotalCap$

	// Balloon tank
	%RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_BalloonTank_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_BalloonTank_AddedCost = #$RS_Temp$

	// Shuttle tank
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_ShuttleTank_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_ShuttleTank_AddedCost = #$RS_Temp$

	// Tank level I
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_I_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankI_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_I_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankI_AddedCost = #$RS_Temp$

	// Tank level II
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_II_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankII_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_II_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankII_AddedCost = #$RS_Temp$

	// Tank level III
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_III_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankIII_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_III_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankIII_AddedCost = #$RS_Temp$

	// Tank level IV
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_IV_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankIV_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_IV_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankIV_AddedCost = #$RS_Temp$

	// Tank level V
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_V_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankV_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_V_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankV_AddedCost = #$RS_Temp$

	// Tank level VI
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VI_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankVI_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VI_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankVI_AddedCost = #$RS_Temp$

	// Tank level VII
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VII_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankVII_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VII_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankVII_AddedCost = #$RS_Temp$

	// Tank level VIII
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VIII_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_TankVIII_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VIII_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_TankVIII_AddedCost = #$RS_Temp$

	// High-pressurized tank
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_HP_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_Tank_HP_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_HP_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_Tank_HP_AddedCost = #$RS_Temp$

	// Boiloff insulation level 1
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Insulation1_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_Tank_Insulation1_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Insulation1_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_Tank_Insulation1_AddedCost = #$RS_Temp$

	// Boiloff insulation level 2
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Insulation2_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_Tank_Insulation2_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Insulation2_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_Tank_Insulation2_AddedCost = #$RS_Temp$

	// Boiloff insulation level 3
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Insulation3_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_Tank_Insulation3_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Insulation3_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_Tank_Insulation3_AddedCost = #$RS_Temp$

	// ZBO subtype
	@RS_Temp = #$RS_TankDryMass$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_ZBO_MassCoeff$
	@RS_Temp -= #$RS_TankDryMass$
	%RS_Tank_ZBO_AddedMass = #$RS_Temp$

	@RS_Temp = #$RS_TankDryCost$
	@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_ZBO_CostCoeff$
	@RS_Temp -= #$RS_TankDryCost$
	%RS_Tank_ZBO_AddedCost = #$RS_Temp$

	// Alter part mass and cost
	@RS_MassOffset += #$RS_TankDryMass$
	@RS_CostOffset += #$RS_TankDryCost$

	@mass = #$RS_MassOffset$
	@cost = #$RS_CostOffset$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}

@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[ResourceContainer],#RS_TotalCap[>0],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	%RS_TankDryMass = #$@REALISM_SIMPLIFIED/resourceContainers_BaseMass$
	@RS_TankDryMass *= #$@REALISM_SIMPLIFIED/resourceContainers_MassCoeff$
	@RS_TankDryMass *= #$RS_TotalCap$

	%RS_TankDryCost = #$@REALISM_SIMPLIFIED/resourceContainers_BaseCost$
	@RS_TankDryCost *= #$@REALISM_SIMPLIFIED/resourceContainers_CostCoeff$
	@RS_TankDryCost *= #$RS_TotalCap$

	// Alter part mass and cost
	@RS_MassOffset += #$RS_TankDryMass$
	@RS_CostOffset += #$RS_TankDryCost$

	@mass = #$RS_MassOffset$
	@cost = #$RS_CostOffset$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}


// ========================================================================
// Tank contents switcher
// ========================================================================

//
// Remove resources and fuel switchers, create RS_TankContentsSwitch
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],#RS_Tank_AddContentsSwitch[*rue],#RS_TotalCap[>0],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	!MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[>0]] {}
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]] {}

	!RESOURCE[LiquidFuel] {}
	!RESOURCE[Oxidizer] {}
	!RESOURCE[MonoPropellant] {}
	!RESOURCE[LqdHydrogen] {}
	!RESOURCE[LqdMethane] {}
	!RESOURCE[XenonGas] {}
	!RESOURCE[ArgonGas] {}
	!RESOURCE[Ore] {}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RS_TankContentsSwitch
		switcherDescription = #LOC_RS_TankContents_DisplayName
		baseVolume = #$/RS_TotalCap$
		affectDragCubes = false
		uiGroupName = RealismSimplified
		uiGroupDisplayName = #LOC_RealismSimplified_UIGroup_DisplayName
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		@baseVolume *= #$@REALISM_SIMPLIFIED/propellantTanks_VolumeCoeff$
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[ResourceContainer],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		@switcherDescription = #LOC_RS_ContainerContents_DisplayName
		@baseVolume *= #$@REALISM_SIMPLIFIED/resourceContainers_VolumeCoeff$
	}
}


//
// Add structural (no tank) variant
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],#RS_Tank_AddNoTankVariant[*rue],#RS_TotalCap[>0],#RS_TankDryMass[*],#RS_TankDryCost[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		SUBTYPE
		{
			name = NoTank
			title = #LOC_RS_NoTank_DisplayName
			addedMass = #$/RS_TankDryMass$
			@addedMass *= -1
			addedCost = #$/RS_TankDryCost$
			@addedCost *= -1
		}
	}
}

//
// Add rocket propellants variants
//

// MetaType = HP
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],#RS_TankMetaType[HP],~RS_RocketPropellantsAdded[],#RS_Tank_AddRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true
	%RS_CryoPropellants_LH2_Added = true
	%RS_CryoPropellants_LqdMethane_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[Hypergolics]
		{
			%title = #LOC_RS_Hypergolics_DisplayName
			%tankType = RS_Hypergolics
		}
		%SUBTYPE[MonoPropellant]
		{
			%title = #LOC_RS_MonoPropellant_DisplayName
			%tankType = RS_MonoPropellant
		}
		%SUBTYPE[HydroLOX]
		{
			%title = #LOC_RS_HydroLOX_DisplayName
			%tankType = RS_HydroLOX
		}
		%SUBTYPE[MethaLOX]
		{
			%title = #LOC_RS_MethaLOX_DisplayName
			%tankType = RS_MethaLOX
		}
		%SUBTYPE[KeroGOX]
		{
			%title = #LOC_RS_KeroGOX_DisplayName
			%tankType = RS_KeroGOX
		}
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
		%SUBTYPE[AlcoLOX]
		{
			%title = #LOC_RS_AlcoLOX_DisplayName
			%tankType = RS_AlcoLOX
		}
		%SUBTYPE[LH2]
		{
			%title = #LOC_RS_LH2_DisplayName
			%tankType = RS_LH2
		}
		%SUBTYPE[LqdMethane]
		{
			%title = #LOC_RS_LqdMethane_DisplayName
			%tankType = RS_LqdMethane
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
		%SUBTYPE[Kerosene]
		{
			%title = #LOC_RS_Kerosene_DisplayName
			%tankType = RS_Kerosene
		}
		%SUBTYPE[AvGas]
		{
			%title = #LOC_RS_AvGas_DisplayName
			%tankType = RS_AvGas
		}
	}
}

// MetaType = ZBO
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],#RS_TankMetaType[ZBO],~RS_RocketPropellantsAdded[],#RS_Tank_AddRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true
	%RS_CryoPropellants_LH2_Added = true
	%RS_CryoPropellants_LqdMethane_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[LH2]
		{
			%title = #LOC_RS_LH2_DisplayName
			%tankType = RS_LH2
		}
		%SUBTYPE[LqdMethane]
		{
			%title = #LOC_RS_LqdMethane_DisplayName
			%tankType = RS_LqdMethane
		}
		%SUBTYPE[HydroLOX]
		{
			%title = #LOC_RS_HydroLOX_DisplayName
			%tankType = RS_HydroLOX
		}
		%SUBTYPE[MethaLOX]
		{
			%title = #LOC_RS_MethaLOX_DisplayName
			%tankType = RS_MethaLOX
		}
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
	}
}

// MetaType = Spaceplane
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],#RS_TankMetaType[Spaceplane],~RS_RocketPropellantsAdded[],#RS_Tank_AddRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true
	%RS_CryoPropellants_LH2_Added = true
	%RS_CryoPropellants_LqdMethane_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[MethaLOX]
		{
			%title = #LOC_RS_MethaLOX_DisplayName
			%tankType = RS_MethaLOX
		}
		%SUBTYPE[LqdMethane]
		{
			%title = #LOC_RS_LqdMethane_DisplayName
			%tankType = RS_LqdMethane
		}
		%SUBTYPE[HydroLOX]
		{
			%title = #LOC_RS_HydroLOX_DisplayName
			%tankType = RS_HydroLOX
		}
		%SUBTYPE[LH2]
		{
			%title = #LOC_RS_LH2_DisplayName
			%tankType = RS_LH2
		}
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
		%SUBTYPE[Kerosene]
		{
			%title = #LOC_RS_Kerosene_DisplayName
			%tankType = RS_Kerosene
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
		%SUBTYPE[AlcoLOX]
		{
			%title = #LOC_RS_AlcoLOX_DisplayName
			%tankType = RS_AlcoLOX
		}
		%SUBTYPE[Hypergolics]
		{
			%title = #LOC_RS_Hypergolics_DisplayName
			%tankType = RS_Hypergolics
		}
		%SUBTYPE[MonoPropellant]
		{
			%title = #LOC_RS_MonoPropellant_DisplayName
			%tankType = RS_MonoPropellant
		}
		%SUBTYPE[AvGas]
		{
			%title = #LOC_RS_AvGas_DisplayName
			%tankType = RS_AvGas
		}
	}
}

// MetaType = Aviation
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],#RS_TankMetaType[Aviation],~RS_RocketPropellantsAdded[],#RS_Tank_AddRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true
	%RS_CryoPropellants_LH2_Added = true
	%RS_CryoPropellants_LqdMethane_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[Kerosene]
		{
			%title = #LOC_RS_Kerosene_DisplayName
			%tankType = RS_Kerosene
		}
		%SUBTYPE[AvGas]
		{
			%title = #LOC_RS_AvGas_DisplayName
			%tankType = RS_AvGas
		}
		%SUBTYPE[LqdMethane]
		{
			%title = #LOC_RS_LqdMethane_DisplayName
			%tankType = RS_LqdMethane
		}
		%SUBTYPE[LH2]
		{
			%title = #LOC_RS_LH2_DisplayName
			%tankType = RS_LH2
		}
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
		%SUBTYPE[MethaLOX]
		{
			%title = #LOC_RS_MethaLOX_DisplayName
			%tankType = RS_MethaLOX
		}
		%SUBTYPE[HydroLOX]
		{
			%title = #LOC_RS_HydroLOX_DisplayName
			%tankType = RS_HydroLOX
		}
		%SUBTYPE[AlcoLOX]
		{
			%title = #LOC_RS_AlcoLOX_DisplayName
			%tankType = RS_AlcoLOX
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
		%SUBTYPE[Hypergolics]
		{
			%title = #LOC_RS_Hypergolics_DisplayName
			%tankType = RS_Hypergolics
		}
		%SUBTYPE[MonoPropellant]
		{
			%title = #LOC_RS_MonoPropellant_DisplayName
			%tankType = RS_MonoPropellant
		}
	}
}

// Shuttle external tank
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankShuttle],~RS_RocketPropellantsAdded[],#RS_Tank_AddRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true
	%RS_CryoPropellants_LH2_Added = true
	%RS_CryoPropellants_LqdMethane_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[HydroLOX]
		{
			%title = #LOC_RS_HydroLOX_DisplayName
			%tankType = RS_HydroLOX
		}
		%SUBTYPE[MethaLOX]
		{
			%title = #LOC_RS_MethaLOX_DisplayName
			%tankType = RS_MethaLOX
		}
		%SUBTYPE[LH2]
		{
			%title = #LOC_RS_LH2_DisplayName
			%tankType = RS_LH2
		}
		%SUBTYPE[LqdMethane]
		{
			%title = #LOC_RS_LqdMethane_DisplayName
			%tankType = RS_LqdMethane
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
	}
}

// Default rocket propellants (generic LFO tank)
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_RocketPropellantsAdded[],#RS_Tank_AddRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true
	%RS_CryoPropellants_LH2_Added = true
	%RS_CryoPropellants_LqdMethane_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
		%SUBTYPE[Hypergolics]
		{
			%title = #LOC_RS_Hypergolics_DisplayName
			%tankType = RS_Hypergolics
		}
		%SUBTYPE[HydroLOX]
		{
			%title = #LOC_RS_HydroLOX_DisplayName
			%tankType = RS_HydroLOX
		}
		%SUBTYPE[MethaLOX]
		{
			%title = #LOC_RS_MethaLOX_DisplayName
			%tankType = RS_MethaLOX
		}
		%SUBTYPE[AlcoLOX]
		{
			%title = #LOC_RS_AlcoLOX_DisplayName
			%tankType = RS_AlcoLOX
		}
		%SUBTYPE[Kerosene]
		{
			%title = #LOC_RS_Kerosene_DisplayName
			%tankType = RS_Kerosene
		}
		%SUBTYPE[LH2]
		{
			%title = #LOC_RS_LH2_DisplayName
			%tankType = RS_LH2
		}
		%SUBTYPE[LqdMethane]
		{
			%title = #LOC_RS_LqdMethane_DisplayName
			%tankType = RS_LqdMethane
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
		%SUBTYPE[MonoPropellant]
		{
			%title = #LOC_RS_MonoPropellant_DisplayName
			%tankType = RS_MonoPropellant
		}
		%SUBTYPE[AvGas]
		{
			%title = #LOC_RS_AvGas_DisplayName
			%tankType = RS_AvGas
		}
	}
}

//
// Add basic rocket propellants variants
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_RocketPropellantsAdded[],#RS_Tank_AddBasicRocketPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_RocketPropellantsAdded = true

	%RS_CryoPropellants_LOX_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[KeroLOX]
		{
			%title = #LOC_RS_KeroLOX_DisplayName
			%tankType = RS_KeroLOX
		}
		%SUBTYPE[AlcoLOX]
		{
			%title = #LOC_RS_AlcoLOX_DisplayName
			%tankType = RS_AlcoLOX
		}
		%SUBTYPE[Hypergolics]
		{
			%title = #LOC_RS_Hypergolics_DisplayName
			%tankType = RS_Hypergolics
		}
		%SUBTYPE[Kerosene]
		{
			%title = #LOC_RS_Kerosene_DisplayName
			%tankType = RS_Kerosene
		}
		%SUBTYPE[AvGas]
		{
			%title = #LOC_RS_AvGas_DisplayName
			%tankType = RS_AvGas
		}
		%SUBTYPE[LOX]
		{
			%title = #LOC_RS_LOX_DisplayName
			%tankType = RS_LOX
		}
	}
}

//
// Add noble gases variants
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_NobleGasesAdded[],#RS_Tank_AddNobleGases[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_NobleGasesAdded = true

	!RESOURCE[XenonGas] {}
	!RESOURCE[ArgonGas] {}

	%RS_CryoPropellants_LqdXenon_Added = true
	%RS_CryoPropellants_LqdArgon_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[Xenon]
		{
			%title = #LOC_RS_Xenon_DisplayName
			%tankType = RS_Xenon
			%upgradeRequired = RS_NobleGases_Tanks_Upgrade
		}
		%SUBTYPE[Argon]
		{
			%title = #LOC_RS_Argon_DisplayName
			%tankType = RS_Argon
			%upgradeRequired = RS_NobleGases_Tanks_Upgrade
		}
		%SUBTYPE[LqdXenon]
		{
			%title = #LOC_RS_LqdXenon_DisplayName
			%tankType = RS_LqdXenon
			%upgradeRequired = RS_LqdNobleGases_Tanks_Upgrade
		}
		%SUBTYPE[LqdArgon]
		{
			%title = #LOC_RS_LqdArgon_DisplayName
			%tankType = RS_LqdArgon
			%upgradeRequired = RS_LqdNobleGases_Tanks_Upgrade
		}
	}
}

//
// Add lithium
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_LithiumAdded[],#RS_Tank_AddLithium[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_LithiumAdded = true

	!RESOURCE[Lithium] {}

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[Lithium]
		{
			%title = #LOC_RS_Lithium_DisplayName
			%tankType = RS_Lithium
		}
	}
}

//
// Add gas propellants variants
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_GasPropellantsAdded[],#RS_Tank_AddGasPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_GasPropellantsAdded = true

	!RESOURCE[Oxygen] {}
	!RESOURCE[CarbonDioxide] {}
	!RESOURCE[Nitrogen] {}
	!RESOURCE[Hydrogen] {}
	!RESOURCE[Methane] {}

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[Oxygen]
		{
			%title = #LOC_RS_Oxygen_DisplayName
			%tankType = RS_Oxygen
		}
		%SUBTYPE[CarbonDioxide]
		{
			%title = #LOC_RS_CarbonDioxide_DisplayName
			%tankType = RS_CarbonDioxide
		}
		%SUBTYPE[Nitrogen]
		{
			%title = #LOC_RS_Nitrogen_DisplayName
			%tankType = RS_Nitrogen
		}
		%SUBTYPE[Hydrogen]
		{
			%title = #LOC_RS_Hydrogen_DisplayName
			%tankType = RS_Hydrogen
		}
		%SUBTYPE[Methane]
		{
			%title = #LOC_RS_Methane_DisplayName
			%tankType = RS_Methane
		}
	}
}

//
// Add FarFutureTechnologies propellants variants
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_FFTPropellantsAdded[],#RS_Tank_AddFFTPropellants[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_FFTPropellantsAdded = true

	!RESOURCE[LqdDeuterium] {}
	!RESOURCE[LqdHe3] {}

	%RS_CryoPropellants_LqdDeuterium_Added = true
	%RS_CryoPropellants_LqdHe3_Added = true

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[LqdDeuterium]
		{
			%title = #LOC_RS_LqdDeuterium_DisplayName
			%tankType = RS_LqdDeuterium
		}
		%SUBTYPE[LqdHelium3]
		{
			%title = #LOC_RS_LqdHelium3_DisplayName
			%tankType = RS_LqdHelium3
		}
		%SUBTYPE[DeHe3]
		{
			%title = #LOC_RS_DeHe3_DisplayName
			%tankType = RS_DeHe3
		}
	}
}

//
// Add Life Support Resources 
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],~RS_LifeSupportResourcesAdded[],#RS_Tank_AddLifeSupportResources[*rue],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],~RS_TankConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	RS_LifeSupportResourcesAdded = true

	!RESOURCE[Supplies] {}
	!RESOURCE[Food] {}
	!RESOURCE[Water] {}
	!RESOURCE[Oxygen] {}
	!RESOURCE[Waste] {}
	!RESOURCE[WasteWater] {}
	!RESOURCE[CarbonDioxide] {}

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		%SUBTYPE[Supplies]
		{
			%title = #LOC_RS_Supplies_DisplayName
			%tankType = RS_Supplies
		}
		%SUBTYPE[SuppliesWithOxygen]
		{
			%title = #LOC_RS_SuppliesWithOxygen_DisplayName
			%tankType = RS_SuppliesWithOxygen
		}
		%SUBTYPE[Food]
		{
			%title = #LOC_RS_Food_DisplayName
			%tankType = RS_Food
		}
		%SUBTYPE[Water]
		{
			%title = #LOC_RS_Water_DisplayName
			%tankType = RS_Water
		}
		%SUBTYPE[Sewage]
		{
			%title = #LOC_RS_Sewage_DisplayName
			%tankType = RS_Sewage
		}
		%SUBTYPE[Waste]
		{
			%title = #LOC_RS_Waste_DisplayName
			%tankType = RS_Waste
		}
		%SUBTYPE[WasteWater]
		{
			%title = #LOC_RS_WasteWater_DisplayName
			%tankType = RS_WasteWater
		}
	}
}

// =================================================
// Pressurization variants switch
// =================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_Tank_AddPressurizationSwitch[*rue],#RS_PropellantTanks_HPVariantsEnabled[*rue],#RS_TotalCap[>0],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankPressurizationSwitch]] {}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RS_TankPressurizationSwitch
		switcherDescription = #LOC_RS_TankPressurization_DisplayName
		baseVolume = #$/RS_TotalCap$
		@baseVolume *= #$@REALISM_SIMPLIFIED/propellantTanks_VolumeCoeff$
		affectDragCubes = false
		uiGroupName = RealismSimplified
		uiGroupDisplayName = #LOC_RealismSimplified_UIGroup_DisplayName

		SUBTYPE
		{
			name = Default
			title = #LOC_RS_TankType_Default
			primaryColor = grey
		}
		SUBTYPE
		{
			name = HP
			title = #LOC_RS_TankType_HP
			addedMass = #$/RS_Tank_HP_AddedMass$
			addedCost = #$/RS_Tank_HP_AddedCost$
			RESOURCE
			{
				name = #$@REALISM_SIMPLIFIED/pressurizationGas$
				unitsPerVolume = #$@REALISM_SIMPLIFIED/pressurizationGas_Ratio$
			}
		}
	}
}

// =================================================
// Tech level switch
// =================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],~RS_Tank_AddTechLevelSwitch[],#RS_TotalCap[>0],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	%RS_Tank_AddTechLevelSwitch = false
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_Tank_AddTechLevelSwitch[*rue],#RS_TotalCap[>0],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]] {}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RS_TechLevelSwitch
		switcherDescription = #LOC_RS_TankTechLevel_DisplayName
		affectDragCubes = false
		uiGroupName = RealismSimplified
		uiGroupDisplayName = #LOC_RealismSimplified_UIGroup_DisplayName

		SUBTYPE
		{
			name = LevelVIII
			title = #LOC_RS_TankTechLevelVIII_title
			descriptionDetail = #LOC_RS_TankTechLevelVIII_desc
			upgradeRequired = RS_FuelTanks_TechLevelVIII_Upgrade
			addedMass = #$/RS_TankVIII_AddedMass$
			addedCost = #$/RS_TankVIII_AddedCost$
			defaultSubtypePriority = 8
			primaryColor = #0020ff
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelVII
			title = #LOC_RS_TankTechLevelVII_title
			descriptionDetail = #LOC_RS_TankTechLevelVII_desc
			upgradeRequired = RS_FuelTanks_TechLevelVII_Upgrade
			addedMass = #$/RS_TankVII_AddedMass$
			addedCost = #$/RS_TankVII_AddedCost$
			defaultSubtypePriority = 7
			primaryColor = #0020df
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelVI
			title = #LOC_RS_TankTechLevelVI_title
			descriptionDetail = #LOC_RS_TankTechLevelVI_desc
			upgradeRequired = RS_FuelTanks_TechLevelVI_Upgrade
			addedMass = #$/RS_TankVI_AddedMass$
			addedCost = #$/RS_TankVI_AddedCost$
			defaultSubtypePriority = 6
			primaryColor = #0020bf
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelV
			title = #LOC_RS_TankTechLevelV_title
			descriptionDetail = #LOC_RS_TankTechLevelV_desc
			upgradeRequired = RS_FuelTanks_TechLevelV_Upgrade
			addedMass = #$/RS_TankV_AddedMass$
			addedCost = #$/RS_TankV_AddedCost$
			defaultSubtypePriority = 5
			primaryColor = #00209f
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelIV
			title = #LOC_RS_TankTechLevelIV_title
			descriptionDetail = #LOC_RS_TankTechLevelIV_desc
			upgradeRequired = RS_FuelTanks_TechLevelIV_Upgrade
			addedMass = #$/RS_TankIV_AddedMass$
			addedCost = #$/RS_TankIV_AddedCost$
			defaultSubtypePriority = 4
			primaryColor = #00207f
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelIII
			title = #LOC_RS_TankTechLevelIII_title
			descriptionDetail = #LOC_RS_TankTechLevelIII_desc
			upgradeRequired = RS_FuelTanks_TechLevelIII_Upgrade
			addedMass = #$/RS_TankIII_AddedMass$
			addedCost = #$/RS_TankIII_AddedCost$
			defaultSubtypePriority = 3
			primaryColor = #00205f
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelII
			title = #LOC_RS_TankTechLevelII_title
			descriptionDetail = #LOC_RS_TankTechLevelII_desc
			upgradeRequired = RS_FuelTanks_TechLevelII_Upgrade
			addedMass = #$/RS_TankII_AddedMass$
			addedCost = #$/RS_TankII_AddedCost$
			defaultSubtypePriority = 2
			primaryColor = #00203f
			secondaryColor = grey
		}
		SUBTYPE
		{
			name = LevelI
			title = #LOC_RS_TankTechLevelI_title
			descriptionDetail = #LOC_RS_TankTechLevelI_desc
			addedMass = #$/RS_TankI_AddedMass$
			addedCost = #$/RS_TankI_AddedCost$
			defaultSubtypePriority = 1
			primaryColor = #00201f
			secondaryColor = grey
		}
	}
}

// =================================================
// Boiloff
// =================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_Tank_AddInsulationSwitch[*rue],#RS_TotalCap[>0],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RS_TankBoiloffInsulationSwitch
		switcherDescription = #LOC_RS_TankBoiloffInsulation_DisplayName
		affectDragCubes = false
		uiGroupName = RealismSimplified
		uiGroupDisplayName = #LOC_RealismSimplified_UIGroup_DisplayName

		SUBTYPE
		{
			name = NoInsulation
			title = #LOC_RS_Tank_Insulation_NoInsulation
			defaultSubtypePriority = 5
			primaryColor = DarkRose
			secondaryColor = DarkRose
		}
		SUBTYPE
		{
			name = ZBO
			title = #LOC_RS_Tank_Insulation_ZBO
			addedMass = #$/RS_Tank_ZBO_AddedMass$
			addedCost = #$/RS_Tank_ZBO_AddedCost$
			defaultSubtypePriority = 4
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorLqdHydrogen
			upgradeRequired = RS_FuelTanks_ZBO_Upgrade
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleCryoTank
					moduleID = RS_CryoTank
				}
				DATA
				{
					CoolingAllowed = true
					CoolingEnabled = true
				}
			}
		}
		SUBTYPE
		{
			name = Insulation1
			title = #LOC_RS_Tank_Insulation_1
			addedMass = #$/RS_Tank_Insulation1_AddedMass$
			addedCost = #$/RS_Tank_Insulation1_AddedCost$
			defaultSubtypePriority = 3
			primaryColor = Blue
			secondaryColor = Blue
			upgradeRequired = RS_FuelTanks_Insulation1_Upgrade
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleCryoTank
					moduleID = RS_CryoTank
				}
				DATA
				{
					CoolingAllowed = false
					CoolingEnabled = false
				}
			}
		}
		SUBTYPE
		{
			name = Insulation2
			title = #LOC_RS_Tank_Insulation_2
			addedMass = #$/RS_Tank_Insulation2_AddedMass$
			addedCost = #$/RS_Tank_Insulation2_AddedCost$
			defaultSubtypePriority = 2
			primaryColor = Bluish
			secondaryColor = Bluish
			upgradeRequired = RS_FuelTanks_Insulation2_Upgrade
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleCryoTank
					moduleID = RS_CryoTank
				}
				DATA
				{
					CoolingAllowed = false
					CoolingEnabled = false
				}
			}
		}
		SUBTYPE
		{
			name = Insulation3
			title = #LOC_RS_Tank_Insulation_3
			addedMass = #$/RS_Tank_Insulation3_AddedMass$
			addedCost = #$/RS_Tank_Insulation3_AddedCost$
			defaultSubtypePriority = 1
			primaryColor = Blueberry
			secondaryColor = Blueberry
			upgradeRequired = RS_FuelTanks_Insulation3_Upgrade
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleCryoTank
					moduleID = RS_CryoTank
				}
				DATA
				{
					CoolingAllowed = false
					CoolingEnabled = false
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TotalCap[>0],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	!MODULE[ModuleCryoTank],* {}
	MODULE
	{
		name = ModuleCryoTank
		CoolingCost = #$@REALISM_SIMPLIFIED/propellantTanks_ZBO_CoolingCost$
		CoolingAllowed = false
		CoolingEnabled = false
		moduleID = RS_CryoTank
		RS_GasGenerationPercent = #$@REALISM_SIMPLIFIED/boiloffRate_GasGenerationPercent$
	}
}

//
// Add propellants to boiloff
//
// LOX
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LOX_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdOxygen
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LOX$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LOX_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdOxygen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LOX$
			OUTPUT_RESOURCE
			{
				ResourceName = Oxygen
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdOxygen]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdOxygen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LOX$
		}
	}
}
// LH2
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LH2_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdHydrogen
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LH2$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LH2_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdHydrogen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LH2$
			OUTPUT_RESOURCE
			{
				ResourceName = Hydrogen
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdHydrogen]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdHydrogen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LH2$
		}
	}
}
// LqdMethane
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LqdMethane_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdMethane
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdMethane$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LqdMethane_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdMethane
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdMethane$
			OUTPUT_RESOURCE
			{
				ResourceName = Methane
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdMethane]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Methane]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdMethane
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdMethane$
		}
	}
}
// LqdAmmonia
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LqdAmmonia_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdAmmonia
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdAmmonia$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LqdAmmonia_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdAmmonia
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdAmmonia$
			OUTPUT_RESOURCE
			{
				ResourceName = Ammonia
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdAmmonia]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Ammonia]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdAmmonia
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdAmmonia$
		}
	}
}
// LqdXenon
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LqdXenon_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdXenon
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdXenon$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LqdXenon_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdXenon
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdXenon$
			OUTPUT_RESOURCE
			{
				ResourceName = XenonGas
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdXenon]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[XenonGas]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdXenon
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdXenon$
		}
	}
}
// LqdArgon
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LqdArgon_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdArgon
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdArgon$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LqdArgon_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdArgon
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdArgon$
			OUTPUT_RESOURCE
			{
				ResourceName = ArgonGas
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdArgon]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[ArgonGas]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdArgon
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdArgon$
		}
	}
}
// LqdDeuterium
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LqdDeuterium_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdDeuterium
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdDeuterium$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LqdDeuterium_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdDeuterium
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdDeuterium$
			OUTPUT_RESOURCE
			{
				ResourceName = Deuterium
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdDeuterium]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Deuterium]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdDeuterium
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdDeuterium$
		}
	}
}
// LqdHe3
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],#RS_CryoPropellants_LqdHe3_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA]
			{
				@DATA
				{
					BOILOFFCONFIG
					{
						FuelName = LqdHe3
						BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdHe3$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],#RS_CryoPropellants_LqdHe3_Added[*rue],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch,CommunityResourcePack]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdHe3
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdHe3$
			OUTPUT_RESOURCE
			{
				ResourceName = Helium3
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdHe3]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Helium3]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIGn
		{
			FuelName = LqdHe3
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LqdHe3$
		}
	}
}

// Set ModuleCryoTank boiloff ratios
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]]
	{
		@BOILOFFCONFIG,*
		{
			@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_NoInsulation$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE[ZBO]
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank]]
			{
				@DATA
				{
					@BOILOFFCONFIG,*
					{
						@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_ZBO_Coeff$
					}
				}
			}
		}
		@SUBTYPE[Insulation1]
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank]]
			{
				@DATA
				{
					@BOILOFFCONFIG,*
					{
						@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_Insulation1_Coeff$
					}
				}
			}
		}
		@SUBTYPE[Insulation2]
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank]]
			{
				@DATA
				{
					@BOILOFFCONFIG,*
					{
						@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_Insulation2_Coeff$
					}
				}
			}
		}
		@SUBTYPE[Insulation3]
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank]]
			{
				@DATA
				{
					@BOILOFFCONFIG,*
					{
						@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_Insulation3_Coeff$
					}
				}
			}
		}
	}
}

// Remove boiloff insulation switch and ModuleCryoTank, if there are no cryogenic propellant variants in tank
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch],@SUBTYPE:HAS[@MODULE:HAS[@IDENTIFIER[ModuleCryoTank],@DATA:HAS[!BOILOFFCONFIG]]]] {}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],~RS_TankConfigured[]]:NEEDS[CryoTanks|SystemHeatBoiloff,B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	!MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],!BOILOFFCONFIG] {}
}

//
// SystemHeat boiloff system
//
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],!MODULE[ModuleSystemHeat],~RS_TankConfigured[]]:NEEDS[SystemHeatBoiloff]:FOR[zzzzRealismSimplified]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/RS_TotalCap$
		@volume *= #$@REALISM_SIMPLIFIED/SHBoiloff_LoopVolumeCoeff$
		moduleID = tank
		iconName = Icon_Snow
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]],~RS_TankConfigured[]]:NEEDS[SystemHeatBoiloff]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]]
	{
		@name = ModuleSystemHeatCryoTank
		systemHeatModuleID = tank
	
		@BOILOFFCONFIG:HAS[#FuelName[LqdHydrogen]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LH2_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LH2_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdMethane]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdMethane_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdMethane_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdOxygen]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LOX_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LOX_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdAmmonia]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdAmmonia_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdAmmonia_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdArgon]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdArgon_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdArgon_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdXenon]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdXenon_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdXenon_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdHe3]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdHe3_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdHe3_CryoCoolerTemperature$
		}
		@BOILOFFCONFIG:HAS[#FuelName[LqdDeuterium]]
		{
			CoolingHeatCost = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdDeuterium_CoolingHeatCost$
			CryocoolerTemperature = #$@REALISM_SIMPLIFIED/SHBoiloff_LqdDeuterium_CryoCoolerTemperature$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleSystemHeatCryoTank]:HAS[#moduleID[RS_CryoTank]],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch,SystemHeatBoiloff]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE,*
		{
			@MODULE:HAS[@IDENTIFIER[ModuleCryoTank]]
			{
				@IDENTIFIER
				{
					@name = ModuleSystemHeatCryoTank
				}
			}
		}
	}
}


// ===================================================================================================================
// Fuel tanks metatypes
// ===================================================================================================================

// Zero boiloff (ZBO)
// Set zero-boiloff subtype as default
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TankMetaType[ZBO]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]
	{
		@SUBTYPE[ZBO]
		{
			!upgradeRequired = DELETE
			%defaultSubtypePriority = 100
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TankMetaType[ZBO],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankBoiloffInsulationSwitch]]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]]
	{
		%CoolingAllowed = true
		%CoolingEnabled = true

		@BOILOFFCONFIG,*
		{
			@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_ZBO_Coeff$
		}
	}
}

// Spaceplane
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],#RS_TankMetaType[Spaceplane]]:AFTER[zzzzRealismSimplifiedReentryProtection]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_ReentryThermalProtectionSwitch]]
	{
		@SUBTYPE[ReentryThermalProtection1]
		{
			!upgradeRequired = DELETE
			%defaultSubtypePriority = 100
		}
	}
}


// ===================================================================================================================
// VolumeAddedToParent should have proper volume and refer to RS_TankContentsSwitch
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],~addedMass[]],*
		{
			addedMass = 0.0
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],~addedCost[]],*
		{
			addedCost = 0.0
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		%parentID = RS_TankContentsSwitch
		@SUBTYPE:HAS[#volumeAddedToParent[*]],*
		{
			@volumeAddedToParent *= #$@REALISM_SIMPLIFIED/propellantTanks_VolumeCoeff$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[ResourceContainer],@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		%parentID = RS_TankContentsSwitch
		@SUBTYPE:HAS[#volumeAddedToParent[*]],*
		{
			@volumeAddedToParent *= #$@REALISM_SIMPLIFIED/resourceContainers_VolumeCoeff$
		}
	}
}


// ===================================================================================================================
// VolumeAdded should have proper volume
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[*],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],~addedMass[]],*
		{
			addedMass = 0.0
		}
		@SUBTYPE:HAS[#volumeAdded[*],~addedCost[]],*
		{
			addedCost = 0.0
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank*],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*]],*
		{
			@volumeAdded *= #$@REALISM_SIMPLIFIED/propellantTanks_VolumeCoeff$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[ResourceContainer],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*]],*
		{
			@volumeAdded *= #$@REALISM_SIMPLIFIED/resourceContainers_VolumeCoeff$
		}
	}
}


// ===================================================================================================================
// Balloon fuel tanks (Atlas I and the like)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankBalloon],#RS_TotalCap[>0],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_BalloonTank_AddedMass[*],#RS_BalloonTank_AddedCost[*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_BalloonTank_AddedMass$
	@cost += #$RS_BalloonTank_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero

	%maxTemp = #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_MaxTemp$
	%skinMaxTemp = #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_SkinMaxTemp$
	%crashTolerance = #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_CrashTolerance$
	%breakingForce = #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_BreakingForce$
	%breakingTorque = #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_BreakingTorque$
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankBalloon],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankBalloon],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Balloon_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// External shuttle tank
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankShuttle],#RS_TotalCap[>0],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_ShuttleTank_AddedMass[*],#RS_ShuttleTank_AddedCost[*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_ShuttleTank_AddedMass$
	@cost += #$RS_ShuttleTank_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero

	%maxTemp = #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_MaxTemp$
	%skinMaxTemp = #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_SkinMaxTemp$
	%crashTolerance = #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_CrashTolerance$
	%breakingForce = #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_BreakingForce$
	%breakingTorque = #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_BreakingTorque$
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankShuttle],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTankShuttle],#RS_TotalCap[>0],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_Shuttle_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level I fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[1],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankI_AddedMass[*],#RS_TankI_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankI_AddedMass$
	@cost += #$RS_TankI_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[1],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_I_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_I_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[1],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_I_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_I_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level II fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[2],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankII_AddedMass[*],#RS_TankII_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankII_AddedMass$
	@cost += #$RS_TankII_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[2],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_II_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_II_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[2],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_II_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_II_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level III fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[3],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankIII_AddedMass[*],#RS_TankIII_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankIII_AddedMass$
	@cost += #$RS_TankIII_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[3],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_III_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_III_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[3],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_III_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_III_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level IV fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[4],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankIV_AddedMass[*],#RS_TankIV_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankIV_AddedMass$
	@cost += #$RS_TankIV_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[4],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_IV_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_IV_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[4],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_IV_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_IV_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level V fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[5],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankV_AddedMass[*],#RS_TankV_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankV_AddedMass$
	@cost += #$RS_TankV_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[5],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_V_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_V_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[5],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_V_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_V_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level VI fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[6],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankVI_AddedMass[*],#RS_TankVI_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankVI_AddedMass$
	@cost += #$RS_TankVI_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[6],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VI_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VI_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[6],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VI_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VI_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level VII fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[7],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankVII_AddedMass[*],#RS_TankVII_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankVII_AddedMass$
	@cost += #$RS_TankVII_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[7],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VII_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VII_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[7],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VII_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VII_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Tech level VIII fuel tanks (no tech level switch)
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[8],#RS_TankDryMass[*],#RS_TankDryCost[*],#RS_TankVIII_AddedMass[*],#RS_TankVIII_AddedCost[*],!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TechLevelSwitch]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@mass += #$RS_TankVIII_AddedMass$
	@cost += #$RS_TankVIII_AddedCost$
	// Mass and cost should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[8],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#volumeAddedToParent[*]]],*
	{
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VIII_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAddedToParent[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAddedToParent$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VIII_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],#RS_TankType[PropellantTank],#RS_TotalCap[>0],#RS_PartTechLevel[8],@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*],@SUBTYPE:HAS[#volumeAdded[*]]],~RS_TankConfigured[]]:NEEDS[B9PartSwitch]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#baseVolume[*]],*
	{
		@SUBTYPE:HAS[#volumeAdded[*],#addedMass[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VIII_MassCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_MassCoeff$
			@addedMass += #$RS_Temp$
		}
		@SUBTYPE:HAS[#volumeAdded[*],#addedCost[*]],*
		{
			%RS_Temp = #$volumeAdded$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_VIII_CostCoeff$
			@RS_Temp *= #$@REALISM_SIMPLIFIED/propellantTanks_CostCoeff$
			@addedCost += #$RS_Temp$
		}
	}
}


// ===================================================================================================================
// Remove AlcoLOX and AvGas tanks variants, if appropriate settings are false
// ===================================================================================================================
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],~RS_AlcoLOX_Engines[*rue],#RS_TankType[PropellantTank*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		!SUBTYPE[AlcoLOX] {}
	}
}
@PART[*]:HAS[~RS_IgnorePart[],~RS_IgnoreTank[],~RS_AvGas_Engines[*rue],#RS_TankType[PropellantTank*],~RS_TankConfigured[]]:FOR[zzzzRealismSimplified]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RS_TankContentsSwitch]]
	{
		!SUBTYPE[AvGas] {}
	}
}
