PART:NEEDS[ProceduralParts,CommunityResourcePack]
{
	// --- general parameters ---
	name = RS_proceduralFuelTankII
	module = Part
	author = AncientGammoner, NathanKell, Swamp Ig

	// --- asset parameters ---
	MODEL
	{
		model = ProceduralParts/Parts/cylinderTank
		scale = 1,1,1
	}
	scale = 1
	rescaleFactor = 1

	// --- node definitions ---
	node_stack_top = 0,0.5,0,0,1,0,1
	node_stack_bottom = 0,-0.5,0,0,-1,0,1
	node_attach = 0,0,0.5,0,0,-1,1

	// --- editor parameters ---
	cost = 0 // 4000
	TechRequired = basicRocketry

	entryCost = 4000
	category = FuelTank
	subcategory = 0
	title = #LOC_RS_ProceduralTankII_title
	manufacturer = #LOC_RS_KerbchemIndustries_title
	description = #LOC_RS_ProceduralTankII_description

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 0
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000
	bulkheadProfiles = size1, srf

	// 1KL = 173.8186 units (stock)
	MODULE
	{
		name = ProceduralPart
		costPerkL = 173.8186
	}
	MODULE
	{
		name = ProceduralShapeCylinder
		displayName = Cylinder
		length = 4.0
		diameter = 1.25
	}
	MODULE
	{
		name = ProceduralShapeCone
		displayName = Cone
		length = 1.0
		topDiameter = 0.625
		bottomDiameter = 1.25
	}
	MODULE
	{
		name = ProceduralShapePill
		displayName = Fillet Cylinder
		length = 1.0
		diameter = 1.25
		fillet = 0.25
	}
	MODULE
	{
		name = ProceduralShapeBezierCone
		displayName = Smooth Cone
		length = 1.0
		topDiameter = 0.625
		bottomDiameter = 1.25
	}
	MODULE
	{
		name = ProceduralShapePolygon
		displayName = Polygon
		length = 2.0
		diameter = 1.25
	}

	// 1KL = 173.8186 units (stock)
	MODULE
	{
		name = TankContentSwitcher
		useVolume = true

		TANK_TYPE_OPTION
		{
			name = KeroLOX
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = Kerosene
				unitsPerKL = 173.8186
			}
			RESOURCE
			{
				name = LqdOxygen
				unitsPerKL = 173.8186
			}
		}
		TANK_TYPE_OPTION
		{
			name = Hypergolics
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = Aerozine50
				unitsPerKL = 173.8186
			}
			RESOURCE
			{
				name = NTO
				unitsPerKL = 173.8186
			}
		}
		TANK_TYPE_OPTION
		{
			name = HydroLOX
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = LqdHydrogen
				unitsPerKL = 173.8186
			}
			RESOURCE
			{
				name = LqdOxygen
				unitsPerKL = 173.8186
			}
		}
		TANK_TYPE_OPTION
		{
			name = AlcoLOX
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = Ethanol75
				unitsPerKL = 173.8186
			}
			RESOURCE
			{
				name = LqdOxygen
				unitsPerKL = 173.8186
			}
		}
		TANK_TYPE_OPTION
		{
			name = Kerosene
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = Kerosene
				unitsPerKL = 173.8186
			}
		}
		TANK_TYPE_OPTION
		{
			name = LOX
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = LqdOxygen
				unitsPerKL = 173.8186
			}
		}
		TANK_TYPE_OPTION
		{
			name = AvGas
			// This is the dry mass of the tank per kL of volume.
			dryDensity = 173.8186
			costMultiplier = 1.0
			RESOURCE
			{
				name = AvGas
				unitsPerKL = 173.8186
			}
		}
	}
}

@PART[RS_proceduralFuelTankII]:BEFORE[RealismSimplified]
{
	RS_AlcoLOX_Engines = #$@REALISM_SIMPLIFIED/AlcoLOX_Engines$
	RS_AvGas_Engines = #$@REALISM_SIMPLIFIED/AvGas_Engines$
	@entryCost = #$@REALISM_SIMPLIFIED/propellantTanks_II_UpgradeCost$

	@MODULE[ProceduralPart]
	{
		@costPerkL *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseCost$
		@costPerkL *= #$@REALISM_SIMPLIFIED/propellantTanks_II_CostCoeff$
	}

	@MODULE[TankContentSwitcher]
	{
		@TANK_TYPE_OPTION,*
		{
			@dryDensity *= #$@REALISM_SIMPLIFIED/propellantTanks_BaseMass$
			@dryDensity *= #$@REALISM_SIMPLIFIED/propellantTanks_II_MassCoeff$
			@RESOURCE,*
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/propellantTanks_VolumeCoeff$
			}
		}
	}
}
@PART[RS_proceduralFuelTankII]:NEEDS[CommunityResourcePack]:FOR[RealismSimplified]
{
	@MODULE[TankContentSwitcher]
	{
		@TANK_TYPE_OPTION[KeroLOX]
		{
			@RESOURCE[Kerosene]
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/KeroLOX_Kerosene_Ratio$
			}
			@RESOURCE[LqdOxygen]
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/KeroLOX_LOX_Ratio$
			}
		}
		@TANK_TYPE_OPTION[HydroLOX]
		{
			@RESOURCE[LqdHydrogen]
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/HydroLOX_LH2_Ratio$
			}
			@RESOURCE[LqdOxygen]
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/HydroLOX_LOX_Ratio$
			}
		}
		@TANK_TYPE_OPTION[Hypergolics]
		{
			@RESOURCE[Aerozine50]
			{
				@name = #$@REALISM_SIMPLIFIED/Hypergolics_Fuel$
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/Hypergolics_Fuel_Ratio$
			}
			@RESOURCE[NTO]
			{
				@name = #$@REALISM_SIMPLIFIED/Hypergolics_Oxidizer$
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/Hypergolics_Oxidizer_Ratio$
			}
		}
		@TANK_TYPE_OPTION[AlcoLOX]
		{
			@RESOURCE[Ethanol75]
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/AlcoLOX_Ethanol75_Ratio$
			}
			@RESOURCE[LqdOxygen]
			{
				@unitsPerKL *= #$@REALISM_SIMPLIFIED/AlcoLOX_LOX_Ratio$
			}
		}
	}
}
@PART[RS_proceduralFuelTankII]:HAS[#RS_AlcoLOX_Engines[*alse]]:FOR[RealismSimplified]
{
	@MODULE[TankContentSwitcher]
	{
		!TANK_TYPE_OPTION[AlcoLOX] {}
	}
}
@PART[RS_proceduralFuelTankII]:HAS[#RS_AvGas_Engines[*alse]]:FOR[RealismSimplified]
{
	@MODULE[TankContentSwitcher]
	{
		!TANK_TYPE_OPTION[AvGas] {}
	}
}
@PART[RS_proceduralFuelTankII]:NEEDS[CryoTanks,CommunityResourcePack]:FOR[RealismSimplified]
{
	MODULE
	{
		name = ModuleCryoTank
		CoolingCost = 0
		CoolingAllowed = false
		CoolingEnabled = false
		moduleID = RS_CryoTank
		RS_GasGenerationPercent = #$@REALISM_SIMPLIFIED/boiloffRate_GasGenerationPercent$
	}
}
@PART[RS_proceduralFuelTankII]:HAS[@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank]]]:NEEDS[CryoTanks,CommunityResourcePack]:FOR[RealismSimplified]
{
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[>0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdHydrogen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LH2$
			@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_NoInsulation$
			OUTPUT_RESOURCE
			{
				ResourceName = Hydrogen
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdHydrogen]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
		BOILOFFCONFIG
		{
			FuelName = LqdOxygen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LOX$
			@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_NoInsulation$
			OUTPUT_RESOURCE
			{
				ResourceName = Oxygen
				Ratio = #$../../RS_GasGenerationPercent$
				@Ratio *= #$@RESOURCE_DEFINITION[LqdOxygen]/density$
				@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
				@Ratio /= 100
				FlowMode = #$@REALISM_SIMPLIFIED/boiloffRate_GasFlowMode$
			}
		}
	}
	@MODULE[ModuleCryoTank]:HAS[#moduleID[RS_CryoTank],#RS_GasGenerationPercent[0]]
	{
		BOILOFFCONFIG
		{
			FuelName = LqdHydrogen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LH2$
			@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_NoInsulation$
		}
		BOILOFFCONFIG
		{
			FuelName = LqdOxygen
			BoiloffRate = #$@REALISM_SIMPLIFIED/boiloffRate_LOX$
			@BoiloffRate *= #$@REALISM_SIMPLIFIED/boiloffRate_NoInsulation$
		}
	}
}
